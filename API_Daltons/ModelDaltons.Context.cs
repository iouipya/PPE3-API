//------------------------------------------------------------------------------
// <auto-generated>
//    Ce code a été généré à partir d'un modèle.
//
//    Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//    Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_Daltons
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class bdd_Daltons_ppe3Entities : DbContext
    {
        public bdd_Daltons_ppe3Entities()
            : base("name=bdd_Daltons_ppe3Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Compte_rendu> Compte_rendu { get; set; }
        public DbSet<Etat_intervention> Etat_intervention { get; set; }
        public DbSet<Intervention> Intervention { get; set; }
        public DbSet<Materiel> Materiel { get; set; }
        public DbSet<Motif_changement_planning> Motif_changement_planning { get; set; }
        public DbSet<Motif_intervention> Motif_intervention { get; set; }
        public DbSet<Societe> Societe { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<Technicien> Technicien { get; set; }
    
        public virtual int AddCompte_Rendu(string note, Nullable<int> id_technicien, Nullable<int> id_societe)
        {
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var id_technicienParameter = id_technicien.HasValue ?
                new ObjectParameter("id_technicien", id_technicien) :
                new ObjectParameter("id_technicien", typeof(int));
    
            var id_societeParameter = id_societe.HasValue ?
                new ObjectParameter("id_societe", id_societe) :
                new ObjectParameter("id_societe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddCompte_Rendu", noteParameter, id_technicienParameter, id_societeParameter);
        }
    
        public virtual int AddIntervention(Nullable<int> id_motif, Nullable<System.DateTime> date_intervention, Nullable<int> id_compte_rendu, Nullable<int> id_etat, Nullable<int> id_technicien, Nullable<int> id_societe)
        {
            var id_motifParameter = id_motif.HasValue ?
                new ObjectParameter("id_motif", id_motif) :
                new ObjectParameter("id_motif", typeof(int));
    
            var date_interventionParameter = date_intervention.HasValue ?
                new ObjectParameter("date_intervention", date_intervention) :
                new ObjectParameter("date_intervention", typeof(System.DateTime));
    
            var id_compte_renduParameter = id_compte_rendu.HasValue ?
                new ObjectParameter("id_compte_rendu", id_compte_rendu) :
                new ObjectParameter("id_compte_rendu", typeof(int));
    
            var id_etatParameter = id_etat.HasValue ?
                new ObjectParameter("id_etat", id_etat) :
                new ObjectParameter("id_etat", typeof(int));
    
            var id_technicienParameter = id_technicien.HasValue ?
                new ObjectParameter("id_technicien", id_technicien) :
                new ObjectParameter("id_technicien", typeof(int));
    
            var id_societeParameter = id_societe.HasValue ?
                new ObjectParameter("id_societe", id_societe) :
                new ObjectParameter("id_societe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddIntervention", id_motifParameter, date_interventionParameter, id_compte_renduParameter, id_etatParameter, id_technicienParameter, id_societeParameter);
        }
    
        public virtual int AddMateriel(Nullable<int> id_materiel, string num_serie, string modele, string ip)
        {
            var id_materielParameter = id_materiel.HasValue ?
                new ObjectParameter("id_materiel", id_materiel) :
                new ObjectParameter("id_materiel", typeof(int));
    
            var num_serieParameter = num_serie != null ?
                new ObjectParameter("num_serie", num_serie) :
                new ObjectParameter("num_serie", typeof(string));
    
            var modeleParameter = modele != null ?
                new ObjectParameter("modele", modele) :
                new ObjectParameter("modele", typeof(string));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMateriel", id_materielParameter, num_serieParameter, modeleParameter, ipParameter);
        }
    
        public virtual int AddSociete(string nom_societe, string adresse_societe, string email_societe, string ville_societe, string cp_societe, string tel_societe)
        {
            var nom_societeParameter = nom_societe != null ?
                new ObjectParameter("nom_societe", nom_societe) :
                new ObjectParameter("nom_societe", typeof(string));
    
            var adresse_societeParameter = adresse_societe != null ?
                new ObjectParameter("adresse_societe", adresse_societe) :
                new ObjectParameter("adresse_societe", typeof(string));
    
            var email_societeParameter = email_societe != null ?
                new ObjectParameter("email_societe", email_societe) :
                new ObjectParameter("email_societe", typeof(string));
    
            var ville_societeParameter = ville_societe != null ?
                new ObjectParameter("ville_societe", ville_societe) :
                new ObjectParameter("ville_societe", typeof(string));
    
            var cp_societeParameter = cp_societe != null ?
                new ObjectParameter("cp_societe", cp_societe) :
                new ObjectParameter("cp_societe", typeof(string));
    
            var tel_societeParameter = tel_societe != null ?
                new ObjectParameter("tel_societe", tel_societe) :
                new ObjectParameter("tel_societe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSociete", nom_societeParameter, adresse_societeParameter, email_societeParameter, ville_societeParameter, cp_societeParameter, tel_societeParameter);
        }
    
        public virtual int AddTechnicien(string nom, string prenom, Nullable<int> id_materiel, string tel)
        {
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var id_materielParameter = id_materiel.HasValue ?
                new ObjectParameter("id_materiel", id_materiel) :
                new ObjectParameter("id_materiel", typeof(int));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTechnicien", nomParameter, prenomParameter, id_materielParameter, telParameter);
        }
    
        public virtual int DeleteCompte_Rendu(Nullable<int> idcompte_rendu)
        {
            var idcompte_renduParameter = idcompte_rendu.HasValue ?
                new ObjectParameter("idcompte_rendu", idcompte_rendu) :
                new ObjectParameter("idcompte_rendu", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteCompte_Rendu", idcompte_renduParameter);
        }
    
        public virtual int DeleteIntervention(Nullable<int> id_intervention)
        {
            var id_interventionParameter = id_intervention.HasValue ?
                new ObjectParameter("id_intervention", id_intervention) :
                new ObjectParameter("id_intervention", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteIntervention", id_interventionParameter);
        }
    
        public virtual int DeleteMateriel(Nullable<int> idmateriel)
        {
            var idmaterielParameter = idmateriel.HasValue ?
                new ObjectParameter("idmateriel", idmateriel) :
                new ObjectParameter("idmateriel", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMateriel", idmaterielParameter);
        }
    
        public virtual int DeleteSociete(Nullable<int> idsociete)
        {
            var idsocieteParameter = idsociete.HasValue ?
                new ObjectParameter("idsociete", idsociete) :
                new ObjectParameter("idsociete", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSociete", idsocieteParameter);
        }
    
        public virtual int DeleteTechnicien(Nullable<int> idtechnicien)
        {
            var idtechnicienParameter = idtechnicien.HasValue ?
                new ObjectParameter("idtechnicien", idtechnicien) :
                new ObjectParameter("idtechnicien", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTechnicien", idtechnicienParameter);
        }
    
        public virtual ObjectResult<SearchCompte_Rendu_Result> SearchCompte_Rendu()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchCompte_Rendu_Result>("SearchCompte_Rendu");
        }
    
        public virtual ObjectResult<SearchIntervention_Result> SearchIntervention()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchIntervention_Result>("SearchIntervention");
        }
    
        public virtual ObjectResult<SearchMateriel_Result> SearchMateriel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMateriel_Result>("SearchMateriel");
        }
    
        public virtual ObjectResult<SearchMotif_Result> SearchMotif()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchMotif_Result>("SearchMotif");
        }
    
        public virtual ObjectResult<SearchSociete_Result> SearchSociete()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchSociete_Result>("SearchSociete");
        }
    
        public virtual ObjectResult<SearchTechnicien_Result> SearchTechnicien()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchTechnicien_Result>("SearchTechnicien");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UPDCompte_rendu(Nullable<int> id_compte_rendu, string note, Nullable<int> id_technicien, Nullable<int> id_societe)
        {
            var id_compte_renduParameter = id_compte_rendu.HasValue ?
                new ObjectParameter("id_compte_rendu", id_compte_rendu) :
                new ObjectParameter("id_compte_rendu", typeof(int));
    
            var noteParameter = note != null ?
                new ObjectParameter("note", note) :
                new ObjectParameter("note", typeof(string));
    
            var id_technicienParameter = id_technicien.HasValue ?
                new ObjectParameter("id_technicien", id_technicien) :
                new ObjectParameter("id_technicien", typeof(int));
    
            var id_societeParameter = id_societe.HasValue ?
                new ObjectParameter("id_societe", id_societe) :
                new ObjectParameter("id_societe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDCompte_rendu", id_compte_renduParameter, noteParameter, id_technicienParameter, id_societeParameter);
        }
    
        public virtual int UPDIntervention(Nullable<int> id_intervention, Nullable<int> id_motif, Nullable<System.DateTime> date_intervention, Nullable<int> id_compte_rendu, Nullable<int> id_etat, Nullable<int> id_technicien, Nullable<int> id_societe)
        {
            var id_interventionParameter = id_intervention.HasValue ?
                new ObjectParameter("id_intervention", id_intervention) :
                new ObjectParameter("id_intervention", typeof(int));
    
            var id_motifParameter = id_motif.HasValue ?
                new ObjectParameter("id_motif", id_motif) :
                new ObjectParameter("id_motif", typeof(int));
    
            var date_interventionParameter = date_intervention.HasValue ?
                new ObjectParameter("date_intervention", date_intervention) :
                new ObjectParameter("date_intervention", typeof(System.DateTime));
    
            var id_compte_renduParameter = id_compte_rendu.HasValue ?
                new ObjectParameter("id_compte_rendu", id_compte_rendu) :
                new ObjectParameter("id_compte_rendu", typeof(int));
    
            var id_etatParameter = id_etat.HasValue ?
                new ObjectParameter("id_etat", id_etat) :
                new ObjectParameter("id_etat", typeof(int));
    
            var id_technicienParameter = id_technicien.HasValue ?
                new ObjectParameter("id_technicien", id_technicien) :
                new ObjectParameter("id_technicien", typeof(int));
    
            var id_societeParameter = id_societe.HasValue ?
                new ObjectParameter("id_societe", id_societe) :
                new ObjectParameter("id_societe", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDIntervention", id_interventionParameter, id_motifParameter, date_interventionParameter, id_compte_renduParameter, id_etatParameter, id_technicienParameter, id_societeParameter);
        }
    
        public virtual int UPDSociete(Nullable<int> id_societe, string nomsociete, string adresse_societe, string email_societe, string ville_societe, string cp_societe, string tel_societe)
        {
            var id_societeParameter = id_societe.HasValue ?
                new ObjectParameter("id_societe", id_societe) :
                new ObjectParameter("id_societe", typeof(int));
    
            var nomsocieteParameter = nomsociete != null ?
                new ObjectParameter("nomsociete", nomsociete) :
                new ObjectParameter("nomsociete", typeof(string));
    
            var adresse_societeParameter = adresse_societe != null ?
                new ObjectParameter("adresse_societe", adresse_societe) :
                new ObjectParameter("adresse_societe", typeof(string));
    
            var email_societeParameter = email_societe != null ?
                new ObjectParameter("email_societe", email_societe) :
                new ObjectParameter("email_societe", typeof(string));
    
            var ville_societeParameter = ville_societe != null ?
                new ObjectParameter("ville_societe", ville_societe) :
                new ObjectParameter("ville_societe", typeof(string));
    
            var cp_societeParameter = cp_societe != null ?
                new ObjectParameter("cp_societe", cp_societe) :
                new ObjectParameter("cp_societe", typeof(string));
    
            var tel_societeParameter = tel_societe != null ?
                new ObjectParameter("tel_societe", tel_societe) :
                new ObjectParameter("tel_societe", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDSociete", id_societeParameter, nomsocieteParameter, adresse_societeParameter, email_societeParameter, ville_societeParameter, cp_societeParameter, tel_societeParameter);
        }
    
        public virtual int UPDTechnicien(Nullable<int> id_technicien, string nom, string prenom, Nullable<int> id_materiel, string tel)
        {
            var id_technicienParameter = id_technicien.HasValue ?
                new ObjectParameter("id_technicien", id_technicien) :
                new ObjectParameter("id_technicien", typeof(int));
    
            var nomParameter = nom != null ?
                new ObjectParameter("nom", nom) :
                new ObjectParameter("nom", typeof(string));
    
            var prenomParameter = prenom != null ?
                new ObjectParameter("prenom", prenom) :
                new ObjectParameter("prenom", typeof(string));
    
            var id_materielParameter = id_materiel.HasValue ?
                new ObjectParameter("id_materiel", id_materiel) :
                new ObjectParameter("id_materiel", typeof(int));
    
            var telParameter = tel != null ?
                new ObjectParameter("tel", tel) :
                new ObjectParameter("tel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDTechnicien", id_technicienParameter, nomParameter, prenomParameter, id_materielParameter, telParameter);
        }
    }
}
